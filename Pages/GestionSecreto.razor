@page "/GestionSecreto"

@inject ServicioSecretos servicio
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NavigationManager
<AuthorizeView>
<Authorized>

  <h3>Tus de secretos</h3>
<div>
  <div class="row bg-light">
        <table class="table table-dark table-bordered">
            <thead class="thead-dark">
                <tr>                    
                    <th>Titulo</th>
                    <th>Descripcion</th>
                    <th>Valor Monetario</th>
                    <th>Fecha</th>
                    <th>Lugar</th>
                    <th>Lantitud</th>
                    <th>Longitud</th>
                </tr>
            </thead>
            <tbody>
                @if (Secretos_de_usuarios.Where(usuario_cedula =>usuario.Id ==usuario_cedula.UsuariosId).ToList().Any())
                {
                    @foreach (var secreto in Secretos_de_usuarios.Where(usuario_cedula =>usuario.Id ==usuario_cedula.UsuariosId).ToList())
                    {
                        <tr>
                            <td>@secreto.Titulo</td>
                            <td>@secreto.Descripcion</td>
                            <td>@secreto.Valor_Monetario</td>
                            <td>@secreto.Fecha</td>
                            <td>@secreto.Lugar</td>
                            <td>@secreto.Latitud</td>
                            <td>@secreto.Longitud</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>Aun no ha agregado ningun secreto</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
    </div>       
    
    </Authorized>
          <NotAuthorized>
         <center>
            <h1>Necesitas iniciar sesion</h1>
            <br/><br/>
          <p>
            Necesitas iniciar sesion con tu cuenta de usuario para poder gestionar tus secretos.
        </p>
        </center>
    </NotAuthorized>
    </AuthorizeView>

@code{
     public string BuscadorCed;
     Usuarios usuario;
     public Secretos NewSecreto { get; set; } = new Secretos();
       protected override async Task OnInitializedAsync()
    {
        BuscadorCed = httpContextAccessor.HttpContext.User.Identity.Name;
        await Refrescar();
    }
    private async Task Refrescar()
    {
        Secretos_de_usuarios = await servicio.ObtenerSecretosAsync();
        usuario = await servicio.ObtenerInfo(BuscadorCed);
    }
     
    private async Task AgregarNewSecreto()
    {   
        NewSecreto.UsuariosId = usuario.Id;
        await servicio.AgregarSecretoAsync(NewSecreto);
        NewSecreto = new Secretos();

        await Refrescar();
    }

    List<Secretos> Secretos_de_usuarios = new List<Secretos>();
   
     private void Navegar( Secretos secreto)
    {
        NavigationManager.NavigateTo("/Secreto/"+secreto.SecretosId);
    }

}